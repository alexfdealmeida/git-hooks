#!/bin/sh

tagHookName="[post-checkout]"
warningMessage="info: "
copyGitHooks="copy-git-hooks.sh"
vFileGitModules=".gitmodules"
vCommandGitFetch="git fetch --recurse-submodules --prune"
GSK_CHECKOUT_SUBMODULES="gsk_checkout_submodules"

gskCheckoutSubmoduleExists=false

searchReturn="$(command -v $GSK_CHECKOUT_SUBMODULES 2>&1)"

if [ $? -eq 0 ]; then
	gskCheckoutSubmoduleExists=true
fi

currentBranchName="$(git branch | grep ^* | sed "s/*//" | sed "s/ //")"

echo "$tagHookName $warningMessage"
echo "Current branch: $currentBranchName"

isBranch=true
rebasing=false

if [[ "$currentBranchName" =~ "(" ]]; then
	isBranch=false

	# (no branch, rebasing branchName)
	if [[ "$currentBranchName" =~ "rebasing" ]]; then
		rebasing=true
	fi
fi

if [ "$isBranch" = true ]; then
	if [ "$gskCheckoutSubmoduleExists" == false ]; then
		echo "$tagHookName $warningMessage"
		echo "Fetching: '$vCommandGitFetch'"
		$vCommandGitFetch

		if [ $? -ne 0 ]; then
			echo -e "\033[1;31mNAO foi possivel buscar as referencias dos branches no repositorio remoto!\033[0m"
		fi

		if [ -f $vFileGitModules ]; then
			echo "$tagHookName $warningMessage"
			echo "Checking out the submodules"
			git submodule foreach --recursive "
				branchSubmodule=\$(git config -f \"\$toplevel/.gitmodules\" submodule.\$name.branch);

				if [ \"\$branchSubmodule\" = \".\" ]; then
					cd \"\$toplevel\";
					branchSuperproject=\$(git branch --show-current);
					cd \"\$sm_path\";
					
					git -c core.hooksPath=/dev/null checkout \$branchSuperproject || echo NAO foi possivel posicionar no branch \$branchSuperproject no submodule \"\$sm_path\"!;
				elif [ -n \"\$branchSubmodule\" ]; then
					git -c core.hooksPath=/dev/null checkout \$branchSubmodule || echo NAO foi possivel posicionar no branch \$branchSubmodule no submodule \"\$sm_path\"!;
				else
					echo Nao foi possivel posicionar no branch correspondente no submodule \"\$sm_path\", pois o branch nao foi especificado no arquivo .gitmodules do superprojeto!;
				fi;
			"
		fi
	else
		$GSK_CHECKOUT_SUBMODULES --no-show-current-branch-message
	fi
fi

echo "$tagHookName $warningMessage"
echo "Checking prerequisites for updating the hooks"
[ "$rebasing" = true ] && echo "Skipped" || ( [ -f "$copyGitHooks" ] && chmod +x "$copyGitHooks" && echo "Running the script '$copyGitHooks'" && ./$copyGitHooks --update-only-git-hooks )